{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACJF,EAAQ,qBAAoCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDG,EAAO,oBAAmCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAE/CA,MA/CQS,SAASC,cAAc,QAE/BC,iBAAiB,UAKxB,SAAsBC,GACpBA,EAAMC,iBAUJ,IATF,IAAMC,EAAaF,EAAMG,cAAcf,MAAMgB,MACvCC,EAAYL,EAAMG,cAAcG,KAAKF,MACrCG,EAAcP,EAAMG,cAAcK,OAAOJ,MAE3ChB,EAAQqB,OAAOP,GACfI,EAAOG,OAAOJ,GACdlB,EAAW,EAGJuB,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EAMlCxB,EAHJC,GAAY,EAGgBC,GACzBuB,MAAK,SAACC,GACLC,EAAA7B,GAAS8B,OAAOC,QAAQ,KAAcnB,OAAPgB,OAC9B,SAACI,GACFH,EAAA7B,GAAS8B,OAAOG,QAAQ,KAAWrB,OAANoB,OAG/B5B,GAAgBkB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst FormEl = document.querySelector('form')\n\nFormEl.addEventListener('submit', onFormSubmit)\n\n\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const delayValue = event.currentTarget.delay.value\n  const stepValue = event.currentTarget.step.value\n  const amountValue = event.currentTarget.amount.value\n  \n  let delay = Number(delayValue);\n  let step = Number(stepValue);\n  let position = 0;\n  // console.log(delay);\n    \n    for (let i = 0; i < amountValue; i += 1) {\n    \n    // console.log(delay);\n    position += 1;\n    \n      // setTimeout(() => {\n        createPromise(position, delay)\n      .then((result) => {\n        Notiflix.Notify.success(`✅ ${result}`);\n      }, (error) => {\n        Notiflix.Notify.failure(`❌ ${error}`);\n      })\n    // }, delay);\n      delay = delay + step;\n  }\n\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve(`Fulfilled promise ${position} in ${delay}ms`)\n    } else {\n      reject(`Rejected promise ${position} in ${delay}ms`)\n    }\n    }, delay);\n      \n    });\n\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","delayValue","currentTarget","value","stepValue","step","amountValue","amount","Number","i","then","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.ccd1d660.js.map"}